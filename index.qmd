---
title: "Weather Gurus"
subtitle: "INFO 523 - Project 1"
author: "Omid Zandi, Mohammad Farmani, Priom Mahmud, Praveen Kumar Pappala, Deema Albluwi, and Remi Hendershott"
format: html
editor: visual
jupyter: python3
---

## Abstract

The dataset is provided by NASA by combining land-surface, sea surface, and air temperature anomalies. The values in the dataset are deviations from the corresponding 1951-1980 means, indicating how much warmer or colder it is than normal for a particular place and time, and the normal means the average over the 30 years 1951-1980 for that place and time of year. More precisely, the base 1951-1980 mean is subtracted from the absolute temperature to get the anomaly.

The dataset contains four CSV files, providing temperature anomalies across different spatial and temporal scales for a long period from 1880 to 2022. We'll analyze yearly temperature anomalies using the J-D column from global_temps.csv, nh_temps.csv, and sh_temps.csv datasets to assess global and hemispheric trends. Additionally, we'll focus on seasonal anomalies, examining DJF and JJA for the Northern Hemisphere and their inverted counterparts for the Southern Hemisphere. To enrich our analysis, we'll integrate 2023 temperature anomaly data from NASA's GISS Surface Temperature Analysis, calculating both yearly and seasonal anomalies for that year.

## Question 1: How have zonal annual temperatures changed over the years? Can we detect any latitudinal pattern? When was the hottest year on record?

Introduction: Introduction: We used variables inside the zonnan_temps.csv dataset. Initially, we transformed the data from a wide format to a long format by defining a new column called zones and merging all eight variables related to zones (i.e. 24N-44N, â€¦) to that column. As we are focusing on annual zonal anomalies in this question, we can skip Glob, NHem, and SHem variables. Finally, we have a dataframe with three columns representing year, zone, and the last contains the anomalies. We created a time series for each zone to visualize the pattern of zonal annual temperature anomalies, emphasizing any noticeable trends or deviation from zonal long-term mean anomaly. We used heatmaps to illustrate how zonal annual temperature anomalies vary across countries and oceans, revealing which hemisphere exhibits more erratic behavior.


Approach: The approach for this analysis will involve two distinct methods: heatmap visualization and time series analysis. The heatmap provides an intuitive grasp of the data by color mapping the temperature anomalies across latitudinal zones over time. This method is suitable for spotting overall trends and outliers in a comprehensive visual format. For the time series analysis, we will examine the changes in global and hemispheric mean temperatures over time. This will involve plotting the data, with a particular emphasis on trend lines to discern long-term changes. The use of color mapping in the heatmap serves to quickly convey the magnitude of anomalies, while the time series plot with its trend line will enable us to evaluate the trajectory of temperature changes more formally.


### Code Block 1: Load and preprocess the data

```{python}
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import joypy
from matplotlib import cm

zonann_temps = pd.read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-07-11/zonann_temps.csv')

# Step 1: Convert the DataFrame from wide to long format
data = pd.melt(zonann_temps, id_vars = ['Year', 'Glob'], 
                       value_vars = ['EQU-24N', '24N-44N', '44N-64N', '64N-90N', '24S-EQU', '44S-24S', '64S-44S', '90S-64S'],
                       var_name = 'lat_range', value_name = 'temp_dev')


# Pivot the data for heatmap plotting, with Year on the x-axis and latitude ranges on the y-axis
heatmap_data_swapped_axes = data.pivot("lat_range", "Year", "temp_dev")

```

### Code Block 2: Heatmap for visualizing temperature anomalies

```{python}
#| label: Heatmap

# Define the specified order for latitude ranges
lat_range_order = ['64N-90N', '44N-64N', '24N-44N', 'EQU-24N', '24S-EQU', '44S-24S', '64S-44S', '90S-64S']

# Reorder the dataframe according to the specified latitude range order
heatmap_data_ordered = heatmap_data_swapped_axes.reindex(lat_range_order)

# Plot the heatmap
plt.figure(figsize = (12, 8))
sns.heatmap(heatmap_data_ordered, cmap = "coolwarm", linewidths = 0.1)
plt.title('Annual Temperature Annomalies Heatmap over each Latitude Range \nYears Colored in Red on the x Axis Show Reference Years')
plt.xlabel('Year')
plt.ylabel('Latitude Range')

# Set x-tick labels to appear every five years and color reference years in red
years = heatmap_data_ordered.columns.values
ticks = range(0, len(years), 5)  # Show a tick every 5 years
plt.xticks(ticks, [years[i] for i in ticks], rotation = 45)
highlight_years = ['1950', '1955', '1960', '1965', '1970', '1975', '1980']
for label in plt.gca().get_xticklabels():
    if label.get_text() in highlight_years:
        label.set_color('red')

plt.show()
```

### Code Block 3: Ridgeplots of zonnal temperature annomalies

```{python}
#| label: Ridgeplots

# Define the desired order for the latitude ranges
lat_order = ['64N-90N', '44N-64N', '24N-44N', 'EQU-24N', '24S-EQU', '44S-24S', '64S-44S', '90S-64S']

# Ensure that the 'lat_range' column is of categorical type and set the categories and their order
data['lat_range'] = pd.Categorical(data['lat_range'], categories=lat_order, ordered=True)

# Create the ridgeline plot with the specified order
fig, axes = joypy.joyplot(
    data=data, 
    by='lat_range', 
    column='temp_dev',
    colormap=cm.viridis, 
    figsize=(12, 8),
    alpha=0.6,
    linewidth=1
)

plt.title('Ridgeline Plot of Temperature Deviations by Latitude Range', fontsize=14, pad=0)
plt.xlabel('Temperature Annomaly')
plt.xlim(-3, 3)
plt.show()


```

Discussion: The heatmap visualization elucidates the distribution and intensity of temperature anomalies across different latitudinal ranges. Notably, there appears to be a concentration of higher anomalies (red tones) in the Northern Hemisphere, particularly in the higher latitudes. This could indicate a stronger warming trend in these areas, which is consistent with the current understanding of climate change where polar and high-latitude regions are warming faster than the global average.

Furthermore, the analysis of the global mean temperature anomalies over time reveals a clear upward trend, signifying an increase in global temperatures. This trend is likely influenced by anthropogenic factors, as suggested by the literature on global warming. The variations in anomalies also suggest periods of relative stability interspersed with rapid increases, potentially corresponding with known climatic events or changes in greenhouse gas emissions.

In conclusion, the data preprocessing and subsequent analysis have provided valuable insights into the historical patterns of temperature change. The evidence points to a planet that is experiencing significant warming, with pronounced effects at higher latitudes. Further investigation could focus on correlating these patterns with environmental and human activities to better understand the drivers behind these changes.

## Question 2: How have the hemispheric seasonal (monthly) temperatures changed over the years? Can we detect any upward or downward trend in any seasons (months) and any of the hemispheres? Which seasons (months) show more erratic behavior?

Introduction: We will use nh_temps.csv and sh_temps.csv datasets. We should start by converting the dataset of each hemisphere to a long format by defining one new column for month (season) and one column that shows the hemispheres (NH and SH). Finally, we can merge the data frames vertically to arrive at a one comprehensive dataframe. We can compare the pattern of seasonal temperature anomalies over the Northern and Southern hemispheres separately and collectively. We can use time series, box plots, or histograms to illustrate and compare the time series and statistical distribution of seasonal temperature anomalies in the northern and southern hemispheres to discuss how different and similar they are. It may be interesting to create a similar visualization to the previous question with deviation from long-term anomalies. This would not only capture how seasonal temperatures have strayed from some long-term average, but how temperatures are fluctuating relative to even temporally local averages. 

Approach: We'll perform comparative analysis by comparing 2023 average temperature anomalies with historical peaks, both globally and hemispherically, while also scrutinizing seasonal variations to deepen our understanding.

Analysis: 

```{python}
import pandas as pd 
import numpy as np  
import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib.ticker import MaxNLocator
NH = pd.read_csv('./data/nh_temps.csv')
SH = pd.read_csv('./data/sh_temps.csv')


df_long = NH.melt(id_vars=['Year'], value_vars=['DJF', 'MAM', 'JJA', 'SON'], var_name='Season', value_name='Temperature')


df_long_SH = SH.melt(id_vars=['Year'], value_vars=['DJF', 'MAM', 'JJA', 'SON'], var_name='Season', value_name='Temperature')

df_long['Hemisphere'] = 'NH'
df_long_SH['Hemisphere'] = 'SH'
df_full = pd.concat([df_long, df_long_SH], ignore_index=True)
# Convert 'Year' into a string so we can concatenate it with 'Season' for a unique x-axis label

df_full['Year'] = df_full['Year'].astype(str)
df_full['Time'] = df_full['Year'] + " " + df_full['Season']
df_full['Hue'] = df_full['Hemisphere'] + ' - ' + df_full['Season']


figg, ax = plt.subplots(nrows=1, ncols=1, figsize=(20, 8))
plot = sns.lineplot(data=df_full, x='Time', y='Temperature', hue='Hue', marker='o', ax=ax)

# Improve the readability of the x-axis labels
plot.xaxis.set_major_locator(MaxNLocator(nbins=20)) 

# Setting the title and labels for the plot
ax.set_title('Seasonal Temperature Variations in the Northern and Southern Hemispheres')
ax.set_xlabel('Time')
ax.set_ylabel('Temperature Variation (Â°C)')

# Add a legend to distinguish the seasons and hemispheres
ax.legend(title='Legend')

# Optimize layout and show the plot
figg.tight_layout()
plt.show()


```

Discussion: 

