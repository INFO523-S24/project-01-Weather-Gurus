{
  "hash": "0262b0995574239455bd1638b87f0dde",
  "result": {
    "engine": "jupyter",
    "markdown": "::: {#a7488531 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd \nimport numpy as np  \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import MaxNLocator\n```\n:::\n\n\n::: {#f3cd6db7 .cell execution_count=2}\n``` {.python .cell-code}\nNH = pd.read_csv('./data/nh_temps.csv')\nSH = pd.read_csv('./data/sh_temps.csv')\n# SH = SH.set_index('Year')\n# NH = NH.set_index('Year')\n```\n:::\n\n\n::: {#45235228 .cell execution_count=3}\n``` {.python .cell-code}\nSH = SH.rename(columns={'DJF': \"JJA\", 'MAM': 'SON', 'JJA': \"DJF\", 'SON':'MAM' })\n\n\ndf_long = NH.melt(id_vars=['Year'], value_vars=['DJF', 'MAM', 'JJA', 'SON'], var_name='Season', value_name='Temperature')\n\n\n\ndf_long_SH = SH.melt(id_vars=['Year'], value_vars=['DJF', 'MAM', 'JJA', 'SON'], var_name='Season', value_name='Temperature')\n\ndf_long['Hemisphere'] = 'NH'\ndf_long_SH['Hemisphere'] = 'SH'\ndf_full = pd.concat([df_long, df_long_SH], ignore_index=True)\n# Convert 'Year' into a string so we can concatenate it with 'Season' for a unique x-axis label\n\ndf_full['Year'] = df_full['Year'].astype(str)\ndf_full['Time'] = df_full['Year'] + \" \" + df_full['Season']\ndf_full['Hue'] = df_full['Hemisphere'] + ' - ' + df_full['Season']\n\n\nnth_label = 10 \nseason = ['DJF', 'MAM', 'JJA', 'SON']\nseason_name = ['Winter', 'Spring', 'Summer', 'Fall']\nfigg, ax = plt.subplots(nrows=2, ncols=2, figsize=(20, 8))\nfor u, i in enumerate(season):\n    sub_full = df_full[df_full['Season']==i] \n\n    plot = sns.lineplot(data=sub_full, x='Year', y='Temperature', hue='Hue', marker='o', ax=ax.flatten()[u])\n\n# Setting the title and labels for the plot\n    ax.flatten()[u].set_title(f'Temperature Variations for {season_name[u]}', fontsize=20) # Adjust title font size as needed\n     # Increase font size for x label\n    ax.flatten()[u].set_ylabel('Temperature Variation (°C)', fontsize=13) # Increase font size for y label\n    ax.flatten()[u].tick_params(axis='y', labelsize=13)\n    if u <=1 :\n        ax.flatten()[u].set_xticks([])\n        ax.flatten()[u].get_xaxis().set_visible(False)\n    else :\n        ax.flatten()[u].set_xlabel('Time', fontsize=13)\n\n# Change the x-tick labels to season names\n    ax.flatten()[u].legend(title='Legend', fontsize=13)\n    for index, label in enumerate(ax.flatten()[u].get_xticklabels()):\n        if index % nth_label != 0:\n            label.set_visible(False)\n\n\n\nfigg, ax = plt.subplots(nrows=1, ncols=1, figsize=(20, 8))\nplot = sns.boxplot(data=df_full, y='Temperature', x='Season', hue='Hemisphere', ax=ax)\n\n# Setting the title and labels for the plot\nax.set_title('Temperature Variations in the Northern and Southern Hemispheres', fontsize=20) # Adjust title font size as needed\nax.set_xlabel('Season', fontsize=16) # Increase font size for x label\nax.set_ylabel('Temperature Variation (°C)', fontsize=16) # Increase font size for y label\n\n# Change the x-tick labels to season names\nax.set_xticklabels(['Winter', 'Spring', 'Summer', 'Fall'])\n\n# Increase font size of the tick labels\nax.tick_params(axis='x', labelsize=16)\nax.tick_params(axis='y', labelsize=16)\n\n# Add a legend to distinguish the seasons and hemispheres, adjust font size as needed\nax.legend(title='Legend', fontsize=15)\n\n# Optimize layout and show the plot\nfigg.tight_layout()\nplt.show()\n\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/var/folders/wr/323h4t5x63zbc0d1jr1l1nlm0000gn/T/ipykernel_81910/1810613142.py:57: UserWarning: set_ticklabels() should only be used with a fixed number of ticks, i.e. after set_ticks() or using a FixedLocator.\n  ax.set_xticklabels(['Winter', 'Spring', 'Summer', 'Fall'])\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](coding_files/figure-html/cell-4-output-2.png){width=1581 height=684}\n:::\n\n::: {.cell-output .cell-output-display}\n![](coding_files/figure-html/cell-4-output-3.png){width=1911 height=761}\n:::\n:::\n\n\n",
    "supporting": [
      "coding_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}